{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kamalabhishek.gunna/Desktop/desktp/imp/gQ/Graphql-assignments/twitter-react-assignment/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import{useQuery,gql}from\"@apollo/client\";var GET_TWEETSLIST=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\nquery Tweets {\\n    tweets {\\n      id\\n      read\\n      body\\n      date  \\n      AuthorId\\n      StatsId\\n      userTweet {\\n        username\\n        name\\n      }\\n      statTweet {\\n        views\\n        likes\\n      }\\n    }\\n  }\\n\"])));function useGetAllTweets(){var _useQuery=useQuery(GET_TWEETSLIST),error=_useQuery.error,loading=_useQuery.loading,data=_useQuery.data;return{error:error,loading:loading,data:data};}export default useGetAllTweets;","map":{"version":3,"names":["useQuery","gql","GET_TWEETSLIST","useGetAllTweets","error","loading","data"],"sources":["/home/kamalabhishek.gunna/Desktop/desktp/imp/gQ/Graphql-assignments/twitter-react-assignment/src/Hooks/useGetAllTweets.tsx"],"sourcesContent":["import { useQuery, gql } from \"@apollo/client\";\n\nconst GET_TWEETSLIST = gql`\nquery Tweets {\n    tweets {\n      id\n      read\n      body\n      date  \n      AuthorId\n      StatsId\n      userTweet {\n        username\n        name\n      }\n      statTweet {\n        views\n        likes\n      }\n    }\n  }\n`;\n\nfunction useGetAllTweets() {\n    const {error, loading, data} = useQuery(GET_TWEETSLIST);\n    return (\n        {\n            error,\n            loading,\n            data\n        }\n    )\n}\n\nexport default useGetAllTweets;"],"mappings":"sNAAA,OAASA,QAAT,CAAmBC,GAAnB,KAA8B,gBAA9B,CAEA,GAAMC,eAAc,CAAGD,GAAH,kTAApB,CAqBA,QAASE,gBAAT,EAA2B,CACvB,cAA+BH,QAAQ,CAACE,cAAD,CAAvC,CAAOE,KAAP,WAAOA,KAAP,CAAcC,OAAd,WAAcA,OAAd,CAAuBC,IAAvB,WAAuBA,IAAvB,CACA,MACI,CACIF,KAAK,CAALA,KADJ,CAEIC,OAAO,CAAPA,OAFJ,CAGIC,IAAI,CAAJA,IAHJ,CADJ,CAOH,CAED,cAAeH,gBAAf"},"metadata":{},"sourceType":"module"}