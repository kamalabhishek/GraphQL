{"ast":null,"code":"var _jsxFileName = \"/home/kamalabhishek.gunna/Desktop/desktp/imp/gQ/Graphql-assignments/twitter-react-assignment/src/Pages/Tweets.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useGetAllTweets from \"../Hooks/useGetAllTweets\";\nimport logo from \"../images/tlogo.jpeg\";\nimport verify from \"../images/verify.png\";\nimport green from \"../images/greenDot.png\";\nimport gray from \"../images/grayDot.png\";\nimport sum from \"../images/sum.png\";\nimport Twitl from \"../images/twitl.png\";\nimport \"./Tweets.css\";\nimport { Button } from \"@mui/material\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport Create from \"./Create\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst READ_TWEET = gql`\n  mutation MarkTweetRead($markTweetReadId: ID!) {\n    markTweetRead(id: $markTweetReadId)\n  }\n`;\n\nfunction Tweets() {\n  _s();\n\n  const {\n    error,\n    loading,\n    data\n  } = useGetAllTweets();\n  const [idVal, setIdVal] = useState();\n  const [readOrNot, {\n    data: data1,\n    loading: loading1,\n    error: error1\n  }] = useMutation(READ_TWEET, {\n    variables: {\n      markTweetReadId: idVal\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Something Went Wrong...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n\n  const formatDate = dateString => {\n    const options = {\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return new Date(dateString).toLocaleDateString([], options);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tweetcontain\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tweets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          textTransform: \"none\",\n          color: \"black\",\n          backgroundColor: \"lightgrey\",\n          marginRight: \"30px\",\n          height: \"30px\",\n          marginTop: \"20px\"\n        },\n        startIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Twitl,\n          alt: \"verify image\",\n          height: \"20px\",\n          width: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this),\n        children: \"Follow @twitterapi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), data.tweets.map((tweet, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contain\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"twitter image\",\n        height: \"80px\",\n        width: \"80px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topcontain\",\n          onClick: async () => {\n            await setIdVal(tweet.id);\n            await readOrNot();\n            window.location.reload();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topcontainleft\",\n            children: [tweet.userTweet.username, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: verify,\n              alt: \"verify image\",\n              height: \"20px\",\n              width: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), \" \", \"@\", tweet.userTweet.name, tweet.read ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: green,\n              alt: \"verify image\",\n              height: \"10px\",\n              width: \"10px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: gray,\n              alt: \"verify image\",\n              height: \"10px\",\n              width: \"10px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topcontainright\",\n            children: formatDate(tweet.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bodycontain\",\n          children: [tweet.body, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                textTransform: \"none\",\n                color: \"grey\"\n              },\n              startIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: sum,\n                alt: \"verify image\",\n                height: \"20px\",\n                width: \"20px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this),\n              children: \"Show Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"82%\",\n        backgroundColor: \"lightgray\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tweets, \"WB8UyAgin/CMk9V71X8vF7fJfwg=\", false, function () {\n  return [useGetAllTweets, useMutation];\n});\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","useState","useGetAllTweets","logo","verify","green","gray","sum","Twitl","Button","gql","useMutation","Create","READ_TWEET","Tweets","error","loading","data","idVal","setIdVal","readOrNot","data1","loading1","error1","variables","markTweetReadId","formatDate","dateString","options","month","day","Date","toLocaleDateString","textTransform","color","backgroundColor","marginRight","height","marginTop","tweets","map","tweet","key","width","id","window","location","reload","userTweet","username","name","read","date","body"],"sources":["/home/kamalabhishek.gunna/Desktop/desktp/imp/gQ/Graphql-assignments/twitter-react-assignment/src/Pages/Tweets.tsx"],"sourcesContent":["import React, { ReactNode, useState } from \"react\";\nimport useGetAllTweets from \"../Hooks/useGetAllTweets\";\nimport logo from \"../images/tlogo.jpeg\";\nimport verify from \"../images/verify.png\";\nimport green from \"../images/greenDot.png\";\nimport gray from \"../images/grayDot.png\";\nimport sum from \"../images/sum.png\";\nimport Twitl from \"../images/twitl.png\";\nimport \"./Tweets.css\";\nimport { Button, InputBase, Link } from \"@mui/material\";\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport Create from \"./Create\";\n\nconst READ_TWEET = gql`\n  mutation MarkTweetRead($markTweetReadId: ID!) {\n    markTweetRead(id: $markTweetReadId)\n  }\n`;\n\nfunction Tweets() {\n  const { error, loading, data } = useGetAllTweets();\n\n  const [idVal, setIdVal] = useState<string>();\n  const [readOrNot, { data: data1, loading: loading1, error: error1 }] =\n    useMutation(READ_TWEET, {\n      variables: {\n        markTweetReadId: idVal,\n      },\n    });\n\n  if (loading) return <h1>Loading...</h1>;\n\n  if (error) return <h1>Something Went Wrong...</h1>;\n\n  const formatDate = (dateString: string) => {\n    const options: Intl.DateTimeFormatOptions = {\n      month: \"short\",\n      day: \"numeric\",\n    };\n    return new Date(dateString).toLocaleDateString([], options);\n  };\n\n  return (\n    <div>\n      <div className=\"Tweetcontain\">\n        <h1>Tweets</h1>\n        <Button\n          style={{\n            textTransform: \"none\",\n            color: \"black\",\n            backgroundColor: \"lightgrey\",\n            marginRight: \"30px\",\n            height: \"30px\",\n            marginTop: \"20px\",\n          }}\n          startIcon={\n            <img\n              src={Twitl}\n              alt=\"verify image\"\n              height={\"20px\"}\n              width={\"20px\"}\n            />\n          }\n        >\n          Follow @twitterapi\n        </Button>\n      </div>\n      {data.tweets.map(\n        (\n          tweet: {\n            body: ReactNode;\n            date: string;\n            id: string;\n            read: boolean;\n            userTweet: {\n              username: string;\n              name: string;\n            };\n            statTweet: {\n              views: string | number;\n            };\n          },\n          key: any\n        ) => (\n          <div className=\"contain\" key={key}>\n            <img\n              src={logo}\n              alt=\"twitter image\"\n              height={\"80px\"}\n              width={\"80px\"}\n            />\n            <div style={{ width:\"100%\"}}>\n              <div\n                className={\"topcontain\"}\n                onClick={async () => {\n                  await setIdVal(tweet.id);\n                  await readOrNot();\n                  window.location.reload();\n                }}\n              >\n                <div className=\"topcontainleft\">\n                  {tweet.userTweet.username}{\" \"}\n                  <img\n                    src={verify}\n                    alt=\"verify image\"\n                    height={\"20px\"}\n                    width={\"20px\"}\n                  />{\" \"}\n                  @{tweet.userTweet.name}\n                  {tweet.read ? (\n                    <img\n                      src={green}\n                      alt=\"verify image\"\n                      height={\"10px\"}\n                      width={\"10px\"}\n                    />\n                  ) : (\n                    <img\n                      src={gray}\n                      alt=\"verify image\"\n                      height={\"10px\"}\n                      width={\"10px\"}\n                    />\n                  )}\n                </div>\n                <div className=\"topcontainright\">{formatDate(tweet.date)}</div>\n              </div>\n              <div className=\"bodycontain\">\n                {tweet.body}\n                <div>\n                  <Button\n                    style={{ textTransform: \"none\", color: \"grey\" }}\n                    startIcon={\n                      <img\n                        src={sum}\n                        alt=\"verify image\"\n                        height={\"20px\"}\n                        width={\"20px\"}\n                      />\n                    }\n                  >\n                    Show Summary\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      )}\n      <div style={{ width: \"82%\", backgroundColor: \"lightgray\" }}>\n        <Create></Create>\n      </div>\n    </div>\n  );\n}\n\nexport default Tweets;"],"mappings":"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"},"metadata":{},"sourceType":"module"}